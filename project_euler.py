# 1 If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.


# s = 0
# for i in range(3,1000):
#     if i % 3 == 0 or i % 5 == 0:
#         s += i
# print(s)


# #2 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


# seq = [1, 2]
# next_item = sum(seq)
# while next_item <= 4000000:
#     seq.append(next_item)
#     next_item = seq[-2]+seq[-1]
# print(seq)


# 3 The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?

# import time

# ts = time.time()
# num = 851475143
# num_2 = num//2+1
# lpf = 0
# for i in range(2, num_2):
#     if num % i == 0:
#         i_2 = i//2+1
#         for j in range(2, i_2):
#             if i % j == 0:
#                 break
#             if j == i_2-1:
#                 lpf = i
# te = time.time()
# total_operation_time = te-ts
# print(num, lpf, total_operation_time)


